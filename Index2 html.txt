<!DOCTYPE html>
<html lang="ru">
<head>
  <meta charset="UTF-8" />
  <title>–†–µ–∞–ª—å–Ω—ã–π –≠–∫–æ-–°–∫–∞–Ω–µ—Ä</title>
  <script src="https://cdn.jsdelivr.net/npm/@tensorflow/tfjs@4.16.0"></script>
  <script src="https://cdn.jsdelivr.net/npm/@tensorflow-models/mobilenet@2.1.0"></script>
  <style>
    body {
      text-align: center;
      font-family: Arial, sans-serif;
      background: #f0fdf4;
      padding: 20px;
    }
    video {
      max-width: 90%;
      border-radius: 12px;
      border: 3px solid #333;
    }
    button {
      margin-top: 15px;
      padding: 12px 20px;
      font-size: 16px;
      background-color: #00a86b;
      color: white;
      border: none;
      border-radius: 8px;
      cursor: pointer;
    }
    #result {
      margin-top: 20px;
      font-size: 18px;
      background: white;
      padding: 15px;
      border-radius: 10px;
      border: 1px solid #ccc;
      display: none;
      text-align: left;
      max-width: 400px;
      margin-left: auto;
      margin-right: auto;
    }
  </style>
</head>
<body>

  <h1>‚ôªÔ∏è –≠–∫–æ-–°–∫–∞–Ω–µ—Ä 2.0</h1>
  <p>–ù–∞–≤–µ–¥–∏ –∫–∞–º–µ—Ä—É –Ω–∞ –º—É—Å–æ—Ä –∏ –Ω–∞–∂–º–∏ "–°–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å"</p>

  <video id="video" autoplay playsinline width="400" height="300"></video><br>
  <button onclick="classify()">üîç –°–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å</button>
  <div id="result">–ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏...</div>

  <script>
    const video = document.getElementById('video');
    const result = document.getElementById('result');
    let model;

    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º: –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏ –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∞ (–Ω–∞ –∫–∞–∑–∞—Ö—Å–∫–æ–º)
    const materialInfo = {
      plastic: {
        container: "–ö”©–∫ —Ç“Ø—Å—Ç—ñ –Ω–µ–º–µ—Å–µ –∞—Ä–Ω–∞–π—ã –ø–ª–∞—Å—Ç–∏–∫ “õ–∞–ª–¥—ã“õ—Ç–∞—Ä –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ",
        recycling: "–ü–ª–∞—Å—Ç–∏–∫ —Å“±—Ä—ã–ø—Ç–∞–ª—ã–ø, –∂—É—ã–ª—ã–ø, –±–∞–ª“õ—ã—Ç—ã–ª—ã–ø, –∂–∞“£–∞ ”©–Ω—ñ–º–¥–µ—Ä–≥–µ –∞–π–Ω–∞–ª–∞–¥—ã (–º—ã—Å–∞–ª—ã, –±”©—Ç–µ–ª–∫–µ–ª–µ—Ä, –ø–∞–∫–µ—Ç—Ç–µ—Ä)."
      },
      paper: {
        container: "–ñ–∞—Å—ã–ª —Ç“Ø—Å—Ç—ñ –Ω–µ–º–µ—Å–µ “õ–∞“ì–∞–∑ “õ–∞–ª–¥—ã“õ—Ç–∞—Ä –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ",
        recycling: "“ö–∞“ì–∞–∑ —Å“±—Ä—ã–ø—Ç–∞–ª—ã–ø, “±—Å–∞“õ—Ç–∞–ª—ã–ø, “õ–∞–π—Ç–∞ ”©“£–¥–µ—É–≥–µ –∂—ñ–±–µ—Ä—ñ–ª–µ–¥—ñ, –∂–∞“£–∞ “õ–∞“ì–∞–∑ ”©–Ω—ñ–º–¥–µ—Ä—ñ –∂–∞—Å–∞–ª–∞–¥—ã."
      },
      glass: {
        container: "–ñ–∞—Å—ã–ª —Ç“Ø—Å—Ç—ñ –Ω–µ–º–µ—Å–µ —à—ã–Ω—ã “õ–∞–ª–¥—ã“õ—Ç–∞—Ä –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ",
        recycling: "–®—ã–Ω—ã –±–∞–ª“õ—ã—Ç—ã–ª—ã–ø, –∂–∞“£–∞ –±”©—Ç–µ–ª–∫–µ–ª–µ—Ä –º–µ–Ω —ã–¥—ã—Å—Ç–∞—Ä“ì–∞ –∞–π–Ω–∞–ª–∞–¥—ã."
      },
      metal: {
        container: "–°–∞—Ä—ã —Ç“Ø—Å—Ç—ñ –Ω–µ–º–µ—Å–µ –º–µ—Ç–∞–ª–ª “õ–∞–ª–¥—ã“õ—Ç–∞—Ä –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ",
        recycling: "–ú–µ—Ç–∞–ª–ª —Å“±—Ä—ã–ø—Ç–∞–ª—ã–ø, –±–∞–ª“õ—ã—Ç—ã–ª—ã–ø, –∂–∞“£–∞ –º–µ—Ç–∞–ª–ª ”©–Ω—ñ–º–¥–µ—Ä–≥–µ –∞–π–Ω–∞–ª–∞–¥—ã."
      },
      cardboard: {
        container: "–ñ–∞—Å—ã–ª —Ç“Ø—Å—Ç—ñ –Ω–µ–º–µ—Å–µ “õ–∞“ì–∞–∑-“õ–∞–ª–¥—ã“õ—Ç–∞—Ä –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ",
        recycling: "–ö–∞—Ä—Ç–æ–Ω “±—Å–∞“õ—Ç–∞–ª—ã–ø, “õ–∞–π—Ç–∞ ”©“£–¥–µ—É–≥–µ –∂—ñ–±–µ—Ä—ñ–ª–µ–¥—ñ, –∂–∞“£–∞ –∫–∞—Ä—Ç–æ–Ω ”©–Ω—ñ–º–¥–µ—Ä—ñ –∂–∞—Å–∞–ª–∞–¥—ã."
      },
      organic: {
        container: "“ö–æ“£—ã—Ä —Ç“Ø—Å—Ç—ñ –Ω–µ–º–µ—Å–µ –æ—Ä–≥–∞–Ω–∏–∫–∞–ª—ã“õ “õ–∞–ª–¥—ã“õ—Ç–∞—Ä –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ",
        recycling: "–û—Ä–≥–∞–Ω–∏–∫–∞–ª—ã“õ “õ–∞–ª–¥—ã“õ—Ç–∞—Ä –∫–æ–º–ø–æ—Å—Ç“õ–∞ –∞–π–Ω–∞–ª—ã–ø, —Ç–æ–ø—ã—Ä–∞“õ —Ç—ã“£–∞–π—Ç“õ—ã—à—ã —Ä–µ—Ç—ñ–Ω–¥–µ “õ–æ–ª–¥–∞–Ω—ã–ª–∞–¥—ã."
      },
      other: {
        container: "“ö–∞—Ä–∞ —Ç“Ø—Å—Ç—ñ –Ω–µ–º–µ—Å–µ –∞—Ä–∞–ª–∞—Å “õ–∞–ª–¥—ã“õ—Ç–∞—Ä –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ",
        recycling: "–ê—Ä–∞–ª–∞—Å “õ–∞–ª–¥—ã“õ—Ç–∞—Ä –∫”©–±—ñ–Ω–µ “õ–∞–π—Ç–∞ ”©“£–¥–µ–ª–º–µ–π–¥—ñ, –∞—Ä–Ω–∞–π—ã –ø–æ–ª–∏–≥–æ–Ω–¥–∞—Ä“ì–∞ –∫”©–º—ñ–ª–µ–¥—ñ."
      }
    };

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–ª—é—á–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é (—Å —É–ø—Ä–æ—â–µ–Ω–∏–µ–º)
    function detectMaterial(name) {
      name = name.toLowerCase();

      if (name.includes("plastic") || name.includes("bottle") || name.includes("pack")) return "plastic";
      if (name.includes("paper") || name.includes("notebook") || name.includes("envelope")) return "paper";
      if (name.includes("glass") || name.includes("jar") || name.includes("bottle")) return "glass";
      if (name.includes("metal") || name.includes("can") || name.includes("tin")) return "metal";
      if (name.includes("cardboard") || name.includes("box")) return "cardboard";
      if (name.includes("banana") || name.includes("apple") || name.includes("food") || name.includes("organic")) return "organic";
      // –ï—Å–ª–∏ –Ω–µ –ø–æ–Ω—è—Ç–Ω–æ ‚Äî —Å—á–∏—Ç–∞–µ–º –ø—Ä–æ—á–∏–º
      return "other";
    }

    async function startCamera() {
      try {
        const stream = await navigator.mediaDevices.getUserMedia({
          video: { facingMode: { exact: "environment" } },
          audio: false
        });
        video.srcObject = stream;
      } catch (e) {
        alert("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∫–∞–º–µ—Ä–µ.");
        console.error(e);
      }
    }

    async function loadModel() {
      model = await mobilenet.load();
      result.innerText = "‚úÖ –ú–æ–¥–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞. –ì–æ—Ç–æ–≤ –∫ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—é.";
    }

    async function classify() {
      if (!model) {
        alert("–ú–æ–¥–µ–ª—å –µ—â—ë –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω–∞. –ü–æ–¥–æ–∂–¥–∏—Ç–µ.");
        return;
      }

      const canvas = document.createElement("canvas");
      canvas.width = video.videoWidth;
      canvas.height = video.videoHeight;
      const ctx = canvas.getContext("2d");
      ctx.drawImage(video, 0, 0);

      const predictions = await model.classify(canvas);

      if (predictions.length === 0) {
        result.style.display = "block";
        result.innerHTML = "‚ùå –ù–∏—á–µ–≥–æ –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.";
        return;
      }

      // –ë–µ—Ä—ë–º –ø–µ—Ä–≤—ã–π (—Å–∞–º—ã–π —É–≤–µ—Ä–µ–Ω–Ω—ã–π) —Ä–µ–∑—É–ª—å—Ç–∞—Ç
      const best = predictions[0];
      const materialKey = detectMaterial(best.className);

      // –ò–Ω—Ñ–∞ –ø–æ –º–∞—Ç–µ—Ä–∏–∞–ª—É
      const info = materialInfo[materialKey];

      result.style.display = "block";
      result.innerHTML = `
        <strong>üß† –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ:</strong> ${best.className} (${(best.probability * 100).toFixed(2)}%)<br><br>
        <strong>‚ôªÔ∏è “ö–∞–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–≥–µ —Ç–∞—Å—Ç–∞—É –∫–µ—Ä–µ–∫:</strong> ${info.container}<br><br>
        <strong>üîÑ “ö–∞–ª–∞–π “õ–∞–π—Ç–∞ ”©“£–¥–µ–ª–µ–¥—ñ:</strong> ${info.recycling}
      `;
    }

    startCamera();
    loadModel();
  </script>

</body>
</html>
